{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploying your docs. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploying your docs.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"ansible/","text":"Ansible Ansible is an IT automation tool. It can configure systems, deploy software, and orchestrate more advanced IT tasks such as continuous deployments or zero downtime rolling updates. What's So Great About Ansible Simple : Easy-to-read syntax Easy to audit Little to nothing to install on the remote hosts Ansible scales down Easy to share System abstraction Powerful Batteries included Push-based Multitier orchestration Masterless Pluggable and embeddable Works with lots of stuf Really scalable Secure Codified knowledge Reproducible systems Equivalent environments Encrypted variables Secure transport Idempotency No daemons","title":"Get started with Ansible"},{"location":"ansible/#ansible","text":"Ansible is an IT automation tool. It can configure systems, deploy software, and orchestrate more advanced IT tasks such as continuous deployments or zero downtime rolling updates.","title":"Ansible"},{"location":"ansible/#whats-so-great-about-ansible","text":"Simple : Easy-to-read syntax Easy to audit Little to nothing to install on the remote hosts Ansible scales down Easy to share System abstraction Powerful Batteries included Push-based Multitier orchestration Masterless Pluggable and embeddable Works with lots of stuf Really scalable Secure Codified knowledge Reproducible systems Equivalent environments Encrypted variables Secure transport Idempotency No daemons","title":"What's So Great About Ansible"},{"location":"ansible/02-install/","text":"Installation and Setup Installing Ansible on Ubuntu Ubuntu builds are available in a PPA here. $ sudo apt update $ sudo apt install software-properties-common $ sudo apt-add-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible PPA\u52a0\u901f\u5730\u5740: launchpad.proxy.ustclug.org Setting Up a Server for Testing Generate ssh key pair for remote exec. $ ssh-keygen -t rsa $ cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys $ chmod 600 ~/.ssh/authorized_keys $ ssh 192.168.33.100 \"hostname\" testserver Telling Ansible About Your Servers $ mkdir inventory $ vim inventory/testserve.ini [webservers] 192.168.33.100 ansible_port=22 [webservers:vars] ansible_host=192.168.33.100 ansible_user=vagrant ansible_private_key_file=~/.ssh/id_rsa Edit /etc/ansible/ansible.cfg args to: host_key_checking = False Revoke ping module $ ansible webservers -i inventory/testserve.ini -m ping 192.168.33.100 | SUCCESS => { \"ansible_facts\": { \"discovered_interpreter_python\": \"/usr/bin/python\" }, \"changed\": false, \"ping\": \"pong\" } Defaut Set: - inventory: /etc/ansible/hosts - passing -i parames to exec: ansible webservers -m ping Revoke command module $ sudo cp inventory/testserve.ini /etc/ansible/hosts $ ansible webservers -m command -a uptime 192.168.33.100 | CHANGED | rc=0 >> 05:38:18 up 2:28, 3 users, load average: 0.07, 0.02, 0.00 $ ansible webservers -m command -a 'ls /var/log/unattended-upgrades' 192.168.33.100 | FAILED | rc=2 >> ls: cannot open directory '/var/log/unattended-upgrades': Permission deniednon-zero return code vagrant@ubuntu-bionic:~$ ansible webservers -b -m command -a 'ls /var/log/unattended-upgrades' 192.168.33.100 | CHANGED | rc=0 >> unattended-upgrades-shutdown.log e -b or --become flag to tell Ansible to become the root user","title":"Installation and Setup"},{"location":"ansible/02-install/#installation-and-setup","text":"","title":"Installation and Setup"},{"location":"ansible/02-install/#installing-ansible-on-ubuntu","text":"Ubuntu builds are available in a PPA here. $ sudo apt update $ sudo apt install software-properties-common $ sudo apt-add-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible PPA\u52a0\u901f\u5730\u5740: launchpad.proxy.ustclug.org","title":"Installing Ansible on Ubuntu"},{"location":"ansible/02-install/#setting-up-a-server-for-testing","text":"Generate ssh key pair for remote exec. $ ssh-keygen -t rsa $ cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys $ chmod 600 ~/.ssh/authorized_keys $ ssh 192.168.33.100 \"hostname\" testserver Telling Ansible About Your Servers $ mkdir inventory $ vim inventory/testserve.ini [webservers] 192.168.33.100 ansible_port=22 [webservers:vars] ansible_host=192.168.33.100 ansible_user=vagrant ansible_private_key_file=~/.ssh/id_rsa Edit /etc/ansible/ansible.cfg args to: host_key_checking = False Revoke ping module $ ansible webservers -i inventory/testserve.ini -m ping 192.168.33.100 | SUCCESS => { \"ansible_facts\": { \"discovered_interpreter_python\": \"/usr/bin/python\" }, \"changed\": false, \"ping\": \"pong\" } Defaut Set: - inventory: /etc/ansible/hosts - passing -i parames to exec: ansible webservers -m ping Revoke command module $ sudo cp inventory/testserve.ini /etc/ansible/hosts $ ansible webservers -m command -a uptime 192.168.33.100 | CHANGED | rc=0 >> 05:38:18 up 2:28, 3 users, load average: 0.07, 0.02, 0.00 $ ansible webservers -m command -a 'ls /var/log/unattended-upgrades' 192.168.33.100 | FAILED | rc=2 >> ls: cannot open directory '/var/log/unattended-upgrades': Permission deniednon-zero return code vagrant@ubuntu-bionic:~$ ansible webservers -b -m command -a 'ls /var/log/unattended-upgrades' 192.168.33.100 | CHANGED | rc=0 >> unattended-upgrades-shutdown.log e -b or --become flag to tell Ansible to become the root user","title":"Setting Up a Server for Testing"},{"location":"ansible/03-playbooks/","text":"Playbooks: A Beginning","title":"03 playbooks"},{"location":"ansible/03-playbooks/#playbooks-a-beginning","text":"","title":"Playbooks: A Beginning"},{"location":"devops/jenkins/","text":"Jenkins\u5b89\u88c5 \u6dfb\u52a0apt\u6e90 curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \\ /usr/share/keyrings/jenkins-keyring.asc > /dev/null echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \\ https://pkg.jenkins.io/debian-stable binary/ | sudo tee \\ /etc/apt/sources.list.d/jenkins.list > /dev/null \u5b89\u88c5 Jenkins sudo apt-get update sudo apt-get install fontconfig openjdk-11-jre sudo apt-get install jenkins \u8bbf\u95ee Jenkins UI \u8bbf\u95ee\u5730\u5740\uff1a http://192.168.33.10:8080 \u89e3\u9501\u5b89\u88c5 \u5b89\u88c5\u63a8\u8350\u63d2\u4ef6 \u521b\u5efa\u7ba1\u7406\u5458\u8d26\u53f7","title":"Jenkins \u5b89\u88c5"},{"location":"devops/jenkins/#jenkins","text":"","title":"Jenkins\u5b89\u88c5"},{"location":"devops/jenkins/#apt","text":"curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \\ /usr/share/keyrings/jenkins-keyring.asc > /dev/null echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \\ https://pkg.jenkins.io/debian-stable binary/ | sudo tee \\ /etc/apt/sources.list.d/jenkins.list > /dev/null","title":"\u6dfb\u52a0apt\u6e90"},{"location":"devops/jenkins/#jenkins_1","text":"sudo apt-get update sudo apt-get install fontconfig openjdk-11-jre sudo apt-get install jenkins","title":"\u5b89\u88c5 Jenkins"},{"location":"devops/jenkins/#jenkins-ui","text":"\u8bbf\u95ee\u5730\u5740\uff1a http://192.168.33.10:8080 \u89e3\u9501\u5b89\u88c5 \u5b89\u88c5\u63a8\u8350\u63d2\u4ef6 \u521b\u5efa\u7ba1\u7406\u5458\u8d26\u53f7","title":"\u8bbf\u95ee Jenkins UI"}]}